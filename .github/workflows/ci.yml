name: CI

on:
  push:
    branches: [master, main, develop]
  pull_request:
    branches: [master, main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"

      - name: Install system dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          # Install system dependencies for desktop notifications in headless environment
          sudo apt-get update
          sudo apt-get install -y xvfb libgtk-3-0 libgdk-pixbuf2.0-0 libxss1 libasound2

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics

      - name: Check formatting with black
        run: |
          black --check --diff .

      - name: Check import sorting with isort
        run: |
          isort --check-only --diff .

      - name: Type check with mypy
        run: |
          mypy trackit/

      - name: Test with pytest
        env:
          # Disable desktop notifications in CI environments
          CI: "true"
          DISPLAY: ":99"
          # Set headless mode for notification tests
          TRACKIT_HEADLESS: "true"
        run: |
          # Start virtual display for Linux
          if [ "$RUNNER_OS" = "Linux" ]; then
            Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
            sleep 1
          fi
          pytest -v --cov=trackit --cov-report=xml --cov-report=term-missing

      - name: Upload coverage to Codecov
        if: matrix.python-version == '3.11'
        uses: codecov/codecov-action@v5
        with:
          files: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

  security:
    name: Basic Security Check
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
          cache: "pip"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
          pip install safety bandit[toml]

      - name: Run safety check (basic)
        run: |
          safety check --short-report || echo "Safety check completed with warnings"

      - name: Run bandit security check (basic)
        run: |
          bandit -r trackit/ -ll --quiet || echo "Bandit scan completed with findings"

  install-test:
    name: Installation test
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        python-version: ["3.11"]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install system dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y xvfb libgtk-3-0 libgdk-pixbuf2.0-0 libxss1 libasound2

      - name: Test installation
        run: |
          python -m pip install --upgrade pip
          pip install .

      - name: Test CLI functionality
        env:
          # Disable desktop notifications in CI environments
          CI: "true"
          TRACKIT_HEADLESS: "true"
          DISPLAY: ":99"
        run: |
          # Start virtual display for Linux
          if [ "$RUNNER_OS" = "Linux" ]; then
            Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
            sleep 1
          fi
          tracker --help
          tracker version
